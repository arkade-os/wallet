#!/bin/sh
set -e

# Generate runtime-config.ts with environment variables
CONFIG_FILE="/usr/share/nginx/html/assets/runtime-config.js"

echo "Generating runtime configuration..."

# Find the actual runtime-config JS file (Vite adds hash to filename)
RUNTIME_CONFIG_FILE=$(find /usr/share/nginx/html/assets -name "runtime-config*.js" -type f | head -n 1)

if [ -n "$RUNTIME_CONFIG_FILE" ]; then
  echo "Found runtime config file: $RUNTIME_CONFIG_FILE"
  
  # Create a new config file with environment variables
  cat > "$RUNTIME_CONFIG_FILE" << EOF
/**
 * Runtime configuration
 * Generated by docker-entrypoint.sh at container startup
 */

export const RUNTIME_CONFIG = {
  ARK_SERVER: ${ARK_SERVER:+\"$ARK_SERVER\"},
  MAX_PERCENTAGE: ${MAX_PERCENTAGE:-undefined},
  SENTRY_DSN: ${SENTRY_DSN:+\"$SENTRY_DSN\"},
  BOLTZ_URL: ${BOLTZ_URL:+\"$BOLTZ_URL\"},
}

export function getConfig(key, envVarName, defaultValue) {
  const runtimeValue = RUNTIME_CONFIG[key]
  if (runtimeValue !== undefined && runtimeValue !== null && runtimeValue !== '') {
    return runtimeValue
  }
  
  // Fallback to build-time env var (already baked into the bundle)
  // This won't work at runtime, but the build-time values are already in other modules
  return defaultValue
}
EOF
  
  echo "Runtime configuration generated successfully"
  cat "$RUNTIME_CONFIG_FILE"
else
  echo "Warning: runtime-config.js not found in /usr/share/nginx/html/assets/"
  echo "App will use build-time configuration"
fi

# Execute the main command (nginx)
exec "$@"
