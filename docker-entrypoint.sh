#!/bin/sh
set -e

# Generate runtime-config.ts with environment variables
CONFIG_FILE="/usr/share/nginx/html/assets/runtime-config.js"

echo "Generating runtime configuration..."

# Find the actual runtime-config JS file (Vite adds hash to filename)
RUNTIME_CONFIG_FILE=$(find /usr/share/nginx/html/assets -name "runtime-config*.js" -type f | head -n 1)

if [ -n "$RUNTIME_CONFIG_FILE" ]; then
  echo "Found runtime config file: $RUNTIME_CONFIG_FILE"
  
  # Check for jq
  if ! command -v jq >/dev/null 2>&1; then
    echo "Error: jq is required but not installed" >&2
    exit 1
  fi
  
  # Validate and coerce MAX_PERCENTAGE to number or null
  MAX_PERCENTAGE_JSON="null"
  if [ -n "$MAX_PERCENTAGE" ]; then
    # Check if it's a valid number
    if echo "$MAX_PERCENTAGE" | grep -qE '^[0-9]+(\.[0-9]+)?$'; then
      MAX_PERCENTAGE_JSON="$MAX_PERCENTAGE"
    else
      echo "Warning: MAX_PERCENTAGE='$MAX_PERCENTAGE' is not a valid number, using null"
    fi
  fi
  
  # Build JSON object safely with jq
  CONFIG_JSON=$(jq -n \
    --arg ark_server "${ARK_SERVER:-}" \
    --arg sentry_dsn "${SENTRY_DSN:-}" \
    --arg boltz_url "${BOLTZ_URL:-}" \
    --argjson max_percentage "$MAX_PERCENTAGE_JSON" \
    '{
      ARK_SERVER: (if $ark_server == "" then null else $ark_server end),
      MAX_PERCENTAGE: $max_percentage,
      SENTRY_DSN: (if $sentry_dsn == "" then null else $sentry_dsn end),
      BOLTZ_URL: (if $boltz_url == "" then null else $boltz_url end)
    }')
  
  # Write the config file
  cat > "$RUNTIME_CONFIG_FILE" << EOF
/**
 * Runtime configuration
 * Generated by docker-entrypoint.sh at container startup
 */

export const RUNTIME_CONFIG = $CONFIG_JSON;

export function getConfig(key, envVarName, defaultValue) {
  const runtimeValue = RUNTIME_CONFIG[key]
  if (runtimeValue !== undefined && runtimeValue !== null && runtimeValue !== '') {
    return runtimeValue
  }
  
  // Fallback to build-time env var (already baked into the bundle)
  // This won't work at runtime, but the build-time values are already in other modules
  return defaultValue
}
EOF
  
  echo "Runtime configuration generated successfully"
  cat "$RUNTIME_CONFIG_FILE"
else
  echo "Warning: runtime-config.js not found in /usr/share/nginx/html/assets/"
  echo "App will use build-time configuration"
fi

# Execute the main command (nginx)
exec "$@"
